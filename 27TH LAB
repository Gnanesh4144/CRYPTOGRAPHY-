#include <stdio.h>
#include <math.h>
long long modExp(long long base, long long exp, long long mod) {
    long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1) result = (result * base) % mod;
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}
int main() {
    long long e = 17;
    long long n = 3233;
    int message = 2;
    long long ciphertext = modExp(message, e, n);
    printf("Encrypted 'C' (2): %lld\n", ciphertext);
    printf("\nAttacker trying brute-force:\n");
    for (int m = 0; m < 26; m++) {
        long long test = modExp(m, e, n);
        printf("Trying m = %2d → %4lld", m, test);
        if (test == ciphertext)
            printf("  ← Match! m = %d ('%c')\n", m, 'A' + m);
        else
            printf("\n");
    }
    return 0;
}
